---
import NavDropdown from './NavDropdown.astro';
import { rulesLinks, characterLinks, toolsLinks, guideLinks, handbookLinks } from './config/navigationLinks';
---

<nav class="top-nav">
  <div class="nav-content">
    <a href="/" class="site-title">League of Heroes 5.5E</a>
    <button class="menu-toggle" aria-label="Toggle menu">
      <span class="bar"></span>
      <span class="bar"></span>
      <span class="bar"></span>
    </button>
    <div class="nav-items">
      <NavDropdown label="Правила" links={rulesLinks} />
      <NavDropdown label="Персонаж" links={characterLinks} />
      <NavDropdown label="Инструменты" links={toolsLinks} />
      <NavDropdown label="Руководства" links={guideLinks} />
      <NavDropdown label="Справочник" links={handbookLinks} />
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.querySelector('.menu-toggle');
    const navItems = document.querySelector('.nav-items');
    const dropdowns = document.querySelectorAll('.dropdown');
    let activeDropdown = null;

    menuToggle?.addEventListener('click', () => {
      navItems?.classList.toggle('active');
      const isOpen = navItems?.classList.contains('active');
      
      const bars = menuToggle.querySelectorAll('.bar');
      if (isOpen) {
        bars[0].style.transform = 'rotate(45deg) translate(6px, 6px)';
        bars[1].style.opacity = '0';
        bars[2].style.transform = 'rotate(-45deg) translate(6px, -6px)';
      } else {
        bars[0].style.transform = 'none';
        bars[1].style.opacity = '1';
        bars[2].style.transform = 'none';
      }
    });

    // Handle mobile dropdown toggles
    dropdowns.forEach(dropdown => {
      const trigger = dropdown.querySelector('.dropdown-trigger');
      trigger?.addEventListener('click', (e) => {
        if (window.innerWidth <= 768) {
          e.preventDefault();
          if (activeDropdown && activeDropdown !== dropdown) {
            activeDropdown.classList.remove('active');
          }
          if (dropdown.classList.contains('active')) {
            dropdown.classList.remove('active');
            activeDropdown = null;
          } else {
            dropdown.classList.add('active');
            activeDropdown = dropdown;
          }
        }
      });
    });

    // Close dropdowns when clicking outside
    document.addEventListener('click', (e) => {
      if (window.innerWidth <= 768) {
        const target = e.target as HTMLElement;
        if (!target.closest('.dropdown')) {
          dropdowns.forEach(dropdown => {
            dropdown.classList.remove('active');
          });
          activeDropdown = null;
        }
      }
    });

    // Close mobile menu when clicking a link
    navItems?.addEventListener('click', (e) => {
      const target = e.target as HTMLElement;
      if (window.innerWidth <= 768 && target.classList.contains('dropdown-item')) {
        dropdowns.forEach(dropdown => {
          dropdown.classList.toggle('active');
        });
        navItems.classList.remove('active');
        const bars = menuToggle?.querySelectorAll('.bar');
        if (bars) {
          bars[0].style.transform = 'none';
          bars[1].style.opacity = '1';
          bars[2].style.transform = 'none';
        }
      }
    });
  });
</script>

<style>
  .top-nav {
    background: var(--card-bg);
    border-bottom: 1px solid var(--card-border);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    padding: 0 2rem;
  }

  .nav-content {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 4rem;
  }

  .site-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary);
    text-decoration: none;
  }

  .nav-items {
    display: flex;
    gap: 1rem;
  }

  .menu-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
  }

  .menu-toggle .bar {
    width: 100%;
    height: 3px;
    background-color: var(--text);
    border-radius: 3px;
    transition: all 0.3s ease;
  }

  @media (max-width: 768px) {
    .nav-content {
      padding: 0 1rem;
    }

    .menu-toggle {
      display: flex;
    }

    .nav-items {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      flex-direction: column;
      background: var(--card-bg);
      padding: 1rem;
      border-top: 1px solid var(--card-border);
      box-shadow: var(--card-shadow);
    }

    .nav-items.active {
      display: flex;
    }
  }
</style>